/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RegisterRequestDto"];
                    "text/json": components["schemas"]["RegisterRequestDto"];
                    "application/*+json": components["schemas"]["RegisterRequestDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AuthResponseDto"];
                        "application/json": components["schemas"]["AuthResponseDto"];
                        "text/json": components["schemas"]["AuthResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["LoginRequestDto"];
                    "text/json": components["schemas"]["LoginRequestDto"];
                    "application/*+json": components["schemas"]["LoginRequestDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AuthResponseDto"];
                        "application/json": components["schemas"]["AuthResponseDto"];
                        "text/json": components["schemas"]["AuthResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/File/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    /** @example {
                     *       "description": "front view",
                     *       "enabled": true
                     *     } */
                    "multipart/form-data": {
                        /** Format: binary */
                        file?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Owner/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["OwnerResponseDto"];
                        "application/json": components["schemas"]["OwnerResponseDto"];
                        "text/json": components["schemas"]["OwnerResponseDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["OwnerUpdateDto"];
                    "text/json": components["schemas"]["OwnerUpdateDto"];
                    "application/*+json": components["schemas"]["OwnerUpdateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Owner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    name?: string;
                    skip?: number;
                    take?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["OwnerResponseDto"][];
                        "application/json": components["schemas"]["OwnerResponseDto"][];
                        "text/json": components["schemas"]["OwnerResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    /** @example {
                     *       "name": "Jane Doe",
                     *       "address": "Av. Siempre Viva 742",
                     *       "photo": "/img/owner.png"
                     *     } */
                    "application/json": components["schemas"]["OwnerCreateDto"];
                    "text/json": components["schemas"]["OwnerCreateDto"];
                    "application/*+json": components["schemas"]["OwnerCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["OwnerResponseDto"];
                        "application/json": components["schemas"]["OwnerResponseDto"];
                        "text/json": components["schemas"]["OwnerResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/properties/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PropertyResponseDto"];
                        "application/json": components["schemas"]["PropertyResponseDto"];
                        "text/json": components["schemas"]["PropertyResponseDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["PropertyUpdateDto"];
                    "text/json": components["schemas"]["PropertyUpdateDto"];
                    "application/*+json": components["schemas"]["PropertyUpdateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/properties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    ownerId?: string;
                    text?: string;
                    priceMin?: number;
                    priceMax?: number;
                    year?: number;
                    page?: number;
                    pageSize?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    /** @example {
                     *       "name": "House X",
                     *       "street": "Main 123",
                     *       "city": "Bogota",
                     *       "state": "Cundinamarca",
                     *       "country": "CO",
                     *       "zipCode": "110111",
                     *       "price": 100000,
                     *       "currency": "USD",
                     *       "year": 2019,
                     *       "area": 120.5,
                     *       "ownerId": "00000000-0000-0000-0000-000000000001",
                     *       "active": true
                     *     } */
                    "application/json": components["schemas"]["PropertyCreateDto"];
                    "text/json": components["schemas"]["PropertyCreateDto"];
                    "application/*+json": components["schemas"]["PropertyCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PropertyResponseDto"];
                        "application/json": components["schemas"]["PropertyResponseDto"];
                        "text/json": components["schemas"]["PropertyResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/properties/{id}/price": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    /** @example {
                     *       "amount": 150000,
                     *       "currency": "USD"
                     *     } */
                    "application/json": components["schemas"]["PropertyPriceUpdateDto"];
                    "text/json": components["schemas"]["PropertyPriceUpdateDto"];
                    "application/*+json": components["schemas"]["PropertyPriceUpdateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    /** @example {
                     *       "amount": 150000,
                     *       "currency": "USD"
                     *     } */
                    "application/json": components["schemas"]["PropertyPriceUpdateDto"];
                    "text/json": components["schemas"]["PropertyPriceUpdateDto"];
                    "application/*+json": components["schemas"]["PropertyPriceUpdateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/api/properties/{id}/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    /** @example {
                     *       "description": "front view",
                     *       "enabled": true
                     *     } */
                    "multipart/form-data": {
                        /** Format: binary */
                        File?: string;
                        Description?: string;
                        Enabled?: boolean;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PropertyImageResponseDto"];
                        "application/json": components["schemas"]["PropertyImageResponseDto"];
                        "text/json": components["schemas"]["PropertyImageResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PropertyImage/by-property/{propertyId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    propertyId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PropertyImageResponseDto"][];
                        "application/json": components["schemas"]["PropertyImageResponseDto"][];
                        "text/json": components["schemas"]["PropertyImageResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PropertyImage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["PropertyImageCreateDto"];
                    "text/json": components["schemas"]["PropertyImageCreateDto"];
                    "application/*+json": components["schemas"]["PropertyImageCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PropertyImageResponseDto"];
                        "application/json": components["schemas"]["PropertyImageResponseDto"];
                        "text/json": components["schemas"]["PropertyImageResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PropertyImage/{id}/enabled": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    enabled?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/api/PropertyImage/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PropertyTrace/by-property/{propertyId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    propertyId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PropertyTraceResponseDto"][];
                        "application/json": components["schemas"]["PropertyTraceResponseDto"][];
                        "text/json": components["schemas"]["PropertyTraceResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PropertyTrace": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["PropertyTraceCreateDto"];
                    "text/json": components["schemas"]["PropertyTraceCreateDto"];
                    "application/*+json": components["schemas"]["PropertyTraceCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PropertyTraceResponseDto"];
                        "application/json": components["schemas"]["PropertyTraceResponseDto"];
                        "text/json": components["schemas"]["PropertyTraceResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AuthResponseDto: {
            accessToken?: string | null;
            /** Format: date-time */
            expiresAtUtc?: string;
            email?: string | null;
            role?: string | null;
        };
        LoginRequestDto: {
            email?: string | null;
            password?: string | null;
        };
        OwnerCreateDto: {
            name?: string | null;
            address?: string | null;
            photo?: string | null;
        };
        OwnerResponseDto: {
            /** Format: uuid */
            id?: string;
            name?: string | null;
            address?: string | null;
            photo?: string | null;
            /** Format: date-time */
            createdAtUtc?: string;
        };
        OwnerUpdateDto: {
            name?: string | null;
            address?: string | null;
            photo?: string | null;
        };
        PropertyCreateDto: {
            name?: string | null;
            street?: string | null;
            city?: string | null;
            state?: string | null;
            country?: string | null;
            zipCode?: string | null;
            /** Format: double */
            price?: number;
            currency?: string | null;
            /** Format: int32 */
            year?: number;
            /** Format: double */
            area?: number;
            /** Format: uuid */
            ownerId?: string;
            active?: boolean;
        };
        PropertyImageCreateDto: {
            /** Format: uuid */
            propertyId?: string;
            url?: string | null;
            description?: string | null;
            enabled?: boolean;
        };
        PropertyImageResponseDto: {
            /** Format: uuid */
            id?: string;
            /** Format: uuid */
            propertyId?: string;
            url?: string | null;
            description?: string | null;
            enabled?: boolean;
            /** Format: date-time */
            createdAtUtc?: string;
        };
        PropertyPriceUpdateDto: {
            /** Format: double */
            amount?: number;
            currency?: string | null;
        };
        PropertyResponseDto: {
            /** Format: uuid */
            id?: string;
            name?: string | null;
            street?: string | null;
            city?: string | null;
            state?: string | null;
            country?: string | null;
            zipCode?: string | null;
            /** Format: double */
            price?: number;
            currency?: string | null;
            /** Format: int32 */
            year?: number;
            /** Format: double */
            area?: number;
            /** Format: uuid */
            ownerId?: string;
            active?: boolean;
            /** Format: date-time */
            createdAtUtc?: string;
        };
        PropertyTraceCreateDto: {
            /** Format: uuid */
            propertyId?: string;
            /** Format: date-time */
            dateUtc?: string;
            description?: string | null;
            /** Format: double */
            value?: number;
            currency?: string | null;
        };
        PropertyTraceResponseDto: {
            /** Format: uuid */
            id?: string;
            /** Format: uuid */
            propertyId?: string;
            /** Format: date-time */
            dateUtc?: string;
            description?: string | null;
            /** Format: double */
            value?: number;
            currency?: string | null;
        };
        PropertyUpdateDto: {
            name?: string | null;
            street?: string | null;
            city?: string | null;
            state?: string | null;
            country?: string | null;
            zipCode?: string | null;
            /** Format: int32 */
            year?: number;
            /** Format: double */
            area?: number;
        };
        RegisterRequestDto: {
            email?: string | null;
            password?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
